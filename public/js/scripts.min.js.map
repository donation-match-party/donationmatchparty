{"version":3,"sources":["scripts.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","window","helpers","ready","fn","document","readyState","addEventListener","filter","getElementById","event","tags","concat","querySelectorAll","map","tag","getAttribute","console","log","forEach","row","dataset","type","indexOf","classList","add","remove"],"mappings":"AAAA,YAEA,SAASA,oBAAmBC,GAAO,MAAOC,oBAAmBD,IAAQE,iBAAiBF,IAAQG,4BAA4BH,IAAQI,qBAElI,QAASA,sBAAuB,KAAM,IAAIC,WAAU,wIAEpD,QAASF,6BAA4BG,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,gBAANA,GAAgB,MAAOE,mBAAkBF,EAAGC,EAAS,IAAIE,GAAIC,OAAOC,UAAUC,SAASC,KAAKP,GAAGQ,MAAM,KAAqE,OAAnD,WAANL,GAAkBH,EAAES,cAAaN,EAAIH,EAAES,YAAYC,MAAgB,QAANP,GAAqB,QAANA,EAAoBQ,MAAMC,KAAKZ,GAAc,cAANG,GAAqB,2CAA2CU,KAAKV,GAAWD,kBAAkBF,EAAGC,GAAzG,QAE7S,QAASL,kBAAiBkB,GAAQ,GAAsB,mBAAXC,SAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,MAAOH,OAAMC,KAAKE,GAEtJ,QAASnB,oBAAmBD,GAAO,GAAIiB,MAAMM,QAAQvB,GAAM,MAAOQ,mBAAkBR,GAEpF,QAASQ,mBAAkBR,EAAKwB,IAAkB,MAAPA,GAAeA,EAAMxB,EAAIyB,UAAQD,EAAMxB,EAAIyB,OAAQ,KAAK,GAAIC,GAAI,EAAGC,EAAO,GAAIV,OAAMO,GAAME,EAAIF,EAAKE,IAAOC,EAAKD,GAAK1B,EAAI0B,EAAM,OAAOC,GAZhLC,OAAOC,SACHC,MAAO,SAAUC,GACgB,YAAxBC,SAASC,WACVF,IAEAC,SAASE,iBAAkB,mBAAoBH,KAK3DH,OAAOC,QAAQC,MAAO,WAGlB,GAAMK,GAASH,SAASI,eAAgB,SAExCD,GAAOD,iBAAkB,SAAU,SAAAG,GAE/B,GAAMC,MAAOC,OAAAxC,mBAAIiC,SAASQ,iBAAkB,gBAAgBC,IAAK,SAAAC,GAAG,MAAIA,GAAIC,aAAc,UAE1FC,SAAQC,IAAK,OAAQP,MAErBC,OAAAxC,mBAAIiC,SAASQ,iBAAiB,mBAAkBM,QAAS,SAAAC,GACrDH,QAAQC,IAAK,mBAAoBE,EAAIC,QAAQC,MACxCX,EAAKY,QAASH,EAAIC,QAAQC,WAC3BF,EAAII,UAAUC,IAAK,UAEnBL,EAAII,UAAUE,OAAQ","file":"scripts.min.js","sourcesContent":["window.helpers = {\r\n    ready: function( fn ) {\r\n        if ( document.readyState !== 'loading' ){\r\n            fn();\r\n        } else {\r\n            document.addEventListener( 'DOMContentLoaded', fn );\r\n        }\r\n    }\r\n};\r\n\r\nwindow.helpers.ready( function(){\r\n\r\n\r\n    const filter = document.getElementById( 'filter' );\r\n\r\n    filter.addEventListener( 'change', event => {\r\n        // const value = event.target.value;\r\n        const tags = [...document.querySelectorAll( '[selected]' )].map( tag => tag.getAttribute( 'value' ) )\r\n\r\n        console.log( 'tags', tags );\r\n\r\n        [...document.querySelectorAll('tr[data-type]')].forEach( row => {\r\n            console.log( 'row.dataset.type', row.dataset.type );\r\n            if ( tags.indexOf( row.dataset.type ) === -1 ){\r\n                row.classList.add( 'd-none' );\r\n            } else {\r\n                row.classList.remove( 'd-none' );\r\n            }\r\n        } );\r\n    } );\r\n\r\n    // [...document.querySelectorAll('.filter-narrow')].forEach( filterNarrowBtn => {\r\n    //     filterNarrowBtn.addEventListener( 'click', event => {\r\n    //         const selectedTag = event.target.innerHTML\r\n    //         console.log( 'selectedTag', selectedTag );\r\n\r\n    //         // [...filter.querySelectorAll('option-pure')].forEach( option => {\r\n    //         [...document.querySelectorAll('#filter option-pure')].forEach( option => {\r\n    //             //setting selected to the <option-pure> or by setting selectPure.selectedIndex = 1;.\r\n    //             if ( selectedTag === option.getAttribute( 'value' ) ){\r\n    //                 option.setAttribute( 'selected', 'selected' );\r\n    //                 console.log( option, 'adding', option.getAttribute( 'value' ) );\r\n    //             } else {\r\n    //                 option.removeAttribute( 'selected' );\r\n    //                 console.log( option, 'removing', option.getAttribute( 'value' ) );\r\n    //             }\r\n\r\n    //         } );\r\n    //     } );\r\n    // } );\r\n\r\n} );"]}