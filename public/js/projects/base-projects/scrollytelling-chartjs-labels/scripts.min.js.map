{"version":3,"sources":["scripts.js"],"names":["ready","fn","document","readyState","addEventListener","showAll","dataset","language","salary","sort","a","b","dataLabels","map","datapoint","dataValues","logos","src","window","location","pathname","width","height","Chart","defaults","color","borderColor","backgroundColor","data","labels","datasets","label","borderWidth","annotation","type","scaleID","value","borderDash","click","_ref","chart","element","console","log","config","options","scales","x","display","y","suggestedMin","startAtZero","suggestedMax","Math","max","ticks","callback","index","values","Intl","NumberFormat","style","currency","format","plugins","legend","title","text","subtitle","padding","bottom","tooltip","callbacks","context","parsed","datalabels","anchor","align","render","textMargin","images","reverse","tooltipItems","year","split","month","helpers","getMonth","parseInt","getElementById","description","menuIcon","scroller","scrollama","setup","step","onStepEnter","response","length","annotations","slice","innerHTML","update","highlightMax","onStepExit","direction","classList","remove","resize","preloadImages","logo"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/* globals Chart, scrollama, moment */\n\nfunction ready( fn ) {\n    if ( document.readyState !== 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nready( function(){\n    let showAll = false;\n\n    const dataset = [\n        {\n            language: 'Python',\n            salary: 100742\n        },\n        {\n            language: 'JavaScript',\n            salary: 97039\n        },\n        {\n            language: 'Java',\n            salary: 101192\n        },\n        {\n            language: 'Swift',\n            salary: 101589\n        },\n        {\n            language: 'C',\n            salary: 94264\n        },\n        {\n            language: 'C++',\n            salary: 100500\n        },\n        {\n            language: 'Ruby',\n            salary: 104988\n        },\n        {\n            language: 'Go',\n            salary: 112092\n        },\n        {\n            language: 'Objective-C',\n            salary: 101285\n        },\n        {\n            language: 'Perl',\n            salary: 98199\n        },\n        {\n            language: 'CSS',\n            salary: 94113\n        },\n        {\n            language: 'Visual Basic',\n            salary: 78271\n        }\n    ].sort( ( a, b ) => ( a.salary > b.salary) ? 1 : -1 );\n\n    const dataLabels = dataset.map( function( datapoint ){\n        return datapoint.language;\n    } );\n\n    const dataValues = dataset.map( function( datapoint ){\n        return datapoint.salary;\n    } );\n\n\n    const logos = [\n        {\n            src: `${ window.location.pathname }/images/logos/go.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/ruby.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/swift.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/objective-c.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/java.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/python.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/c++.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/perl.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/javascript.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/c.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/css.png`,\n            width: 20,\n            height: 20\n        },\n        {\n            src: `${ window.location.pathname }/images/logos/visual-basic.png`,\n            width: 20,\n            height: 20\n        }\n    ];\n\n    Chart.defaults.color = \"#172c66\";\n    Chart.defaults.borderColor = \"#8bd3dd\";\n    Chart.defaults.backgroundColor = \"#fef6e4\";\n\n    const data = {\n        labels: [],\n        datasets: [{\n            label: 'Median salary',\n            borderWidth: 1,\n            data: []\n        }]\n    };\n\n    const annotation = {\n        type: 'line',\n        scaleID: 'y',\n        value: 72560,\n        borderColor: Chart.defaults.borderColor,\n        borderWidth: 2,\n        borderDash: [5, 5],\n        // label: {\n        //     backgroundColor: 'rgba(0,0,0,0.3)',\n        //     color: Chart.defaults.backgroundColor,\n        //     content: '$78k',\n        //     enabled: false\n        // },\n        click: function({chart, element}) {\n            console.log('Line annotation clicked');\n        }\n    };    \n\n    const config = {\n        type: 'bar',\n        data: data,\n        options: {\n            scales: {\n                x: {\n                    display: false,\n                },\n                y: {\n                    display: false,\n                    suggestedMin: 50000,\n                    startAtZero: false,\n                    suggestedMax: Math.max( dataValues ),\n                    ticks: {\n                        callback: function( value, index, values ){\n                            return `${new Intl.NumberFormat( 'en-US', { style: 'currency', currency: 'USD' } ).format( value )}`;\n                        }\n                    }\n                }\n            },\n            plugins: {\n                legend: {\n                    display: false\n                },\n                title: {\n                    display: true,\n                    text: 'Average developer salary by programming language'\n                },                \n                subtitle: {\n                    display: true,\n                    text: 'Average developer salary: $78,271',\n                    padding: {\n                        bottom: 30\n                    }                    \n                },                \n                tooltip: {\n                    callbacks: {\n                        label: function( context ){\n                            let label = context.dataset.label || '';\n                            if ( label ) {\n                              label += ': ';\n                          }\n                          if ( context.parsed.y !== null ) {\n                              label += `${new Intl.NumberFormat( 'en-US', { style: 'currency', currency: 'USD' } ).format( context.parsed.y )}`;\n                          }\n                          return label;\n                      }\n                  }\n                },\n                datalabels: {\n                    anchor: 'end',\n                    align  : 'start'        \n                },\n                labels: {\n                    render: 'image',\n                    textMargin: -40,\n                    images: logos.reverse()\n                },\n                // annotation: {\n                //     annotations: {\n                //         annotation\n                //     }\n                // }                \n            }            \n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    title: function( tooltipItems ) {\n                        const title = tooltipItems[0].label;\n                        const year = title.split( '/' )[0];\n                        const month = window.helpers.getMonth( parseInt( title.split( '/' )[1] ) - 1 );\n                        return `${month} ${year}`;\n                    },\n                    label: function( context ){\n                        let label = context.dataset.label || '';\n                        if ( label ) {\n                          label += ': ';\n                      }\n                      if ( context.parsed.y !== null ) {\n                          label += `$${new Intl.NumberFormat( 'en-US', { style: 'currency', currency: 'USD' } ).format( context.parsed.y )}`;\n                      }\n                      return label;\n                  }\n              }\n            }        \n        }        \n    };\n\n    const chart = new Chart( document.getElementById( 'chart' ), config );\n\n    const description = document.getElementById( 'description' );\n    const menuIcon = document.getElementById( 'menu-icon' );\n    const scroller = scrollama();\n\n    scroller\n        .setup( {\n            step: '.step',\n        } )\n        .onStepEnter( function( response ){\n            /* response = { direction, element, index }, */\n            // console.log( 'onStepEnter', response ); \n            // console.log( 'onStepEnter', response.index, response.direction );\n\n            // if ( response.index === 0 ){\n            //     description.innerHTML = '';\n            // }\n\n            if ( response.index + 1 === dataset.length ){\n                showAll = true;\n            }\n\n            chart.options.scales.x.display = true;\n            chart.options.scales.y.display = true;\n\n            if ( !showAll ){\n                // annotation.label.enabled = response.index > 0;\n\n                chart.options.plugins.annotation = {\n                    annotations: {\n                        annotation\n                    }\n                };\n\n                chart.data.datasets[0].data = dataValues.slice(0, response.index + 1);\n                chart.data.labels = dataLabels.slice(0, response.index + 1);\n                // chart.data.labels[response.index] = dataLabels[response.index];\n\n                description.innerHTML = '';\n                chart.update();\n                window.helpers.highlightMax( chart );\n            }\n\n        } )\n        .onStepExit( function( response ){\n            /* response = { direction, element, index }, */\n            // console.log( 'onStepExit', response );\n            // console.log( 'onStepExit', response.index, response.direction );\n\n            if ( menuIcon && ( ( response.direction === 'up' && response.index === 0 ) || ( response.direction === 'down' && response.index === datasets.length - 1 ) ) ){\n                menuIcon.classList.remove( 'd-none' );\n            }\n        }\n    );\n\n    window.addEventListener( 'resize', scroller.resize );\n    \n    window.helpers.preloadImages( logos.map( function( logo ){\n        return logo.src;\n    } ) );\n\n} );\n"]}